// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type ConfirmPasswordResetInput struct {
	Token    string `json:"token" db:"token"`
	Password string `json:"password" db:"password"`
}

type InitiatePasswordResetInput struct {
	Username string `json:"username" db:"username"`
}

type LoginInput struct {
	Username string `json:"username" db:"username"`
	Password string `json:"password" db:"password"`
}

type PageInfo struct {
	StartCursor *string `json:"startCursor" db:"start_cursor"`
	EndCursor   *string `json:"endCursor" db:"end_cursor"`
	HasNextPage bool    `json:"hasNextPage" db:"has_next_page"`
}

type RefreshTokenInput struct {
	Token string `json:"token" db:"token"`
}

type ResetPasswordMutation struct {
	Initiate bool `json:"initiate" db:"initiate"`
	Confirm  bool `json:"confirm" db:"confirm"`
}

type SignupInput struct {
	Username  string  `json:"username" db:"username"`
	Password  string  `json:"password" db:"password"`
	Email     string  `json:"email" db:"email"`
	FirstName *string `json:"firstName" db:"first_name"`
	LastName  *string `json:"lastName" db:"last_name"`
}

type Todo struct {
	ID        string      `json:"id" db:"id"`
	UserID    string      `json:"userId" db:"user_id"`
	Title     string      `json:"title" db:"title"`
	Content   *string     `json:"content" db:"content"`
	IsDone    bool        `json:"isDone" db:"is_done"`
	CreatedAt time.Time   `json:"createdAt" db:"created_at"`
	UpdatedAt *time.Time  `json:"updatedAt" db:"updated_at"`
	Files     []*TodoFile `json:"files" db:"files"`
}

type TodoEdge struct {
	Cursor string `json:"cursor" db:"cursor"`
	Node   *Todo  `json:"node" db:"node"`
}

type TodoInput struct {
	Title   string  `json:"title" db:"title"`
	Content *string `json:"content" db:"content"`
	IsDone  *bool   `json:"isDone" db:"is_done"`
}

type TodoPatch struct {
	Title   *string `json:"title" db:"title"`
	Content *string `json:"content" db:"content"`
	IsDone  *bool   `json:"isDone" db:"is_done"`
}

type Todos struct {
	Edges    []*TodoEdge `json:"edges" db:"edges"`
	PageInfo *PageInfo   `json:"pageInfo" db:"page_info"`
}

type User struct {
	ID        string     `json:"id" db:"id"`
	Username  string     `json:"username" db:"username"`
	Email     string     `json:"email" db:"email"`
	FirstName *string    `json:"firstName" db:"first_name"`
	LastName  *string    `json:"lastName" db:"last_name"`
	CreatedAt time.Time  `json:"createdAt" db:"created_at"`
	UpdatedAt *time.Time `json:"updatedAt" db:"updated_at"`
	Todo      *Todo      `json:"todo" db:"todo"`
	Todos     *Todos     `json:"todos" db:"todos"`
}

type UserPatch struct {
	Username        *string `json:"username" db:"username"`
	Email           *string `json:"email" db:"email"`
	FirstName       *string `json:"firstName" db:"first_name"`
	LastName        *string `json:"lastName" db:"last_name"`
	CurrentPassword *string `json:"currentPassword" db:"current_password"`
	NewPassword     *string `json:"newPassword" db:"new_password"`
}
